{
  "$schema": "http://json-schema.org/draft-04/schema",
  "definitions": {
    "AccessConfig": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "definitions": {
        "access": {
          "title": "Access",
          "type": "object",
          "properties": {
            "accessright": {
              "type": "string",
              "minLength": 1,
              "description": "Name of the access right."
            },
            "group": {
              "type": "string",
              "minLength": 1,
              "description": "Name of the user group."
            },
            "permission": {
              "type": "string",
              "enum": [
                "Allow",
                "Deny",
                "Inherit"
              ],
              "description": "Name of the permission described by this rule."
            }
          },
          "required": [
            "accessright",
            "group",
            "permission"
          ]
        }
      },
      "type": "array",
      "items": {
        "$ref": "tchmi:framework#/definitions/AccessConfig/definitions/access"
      }
    },
    "Alarm": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "allOf": [
        {
          "$ref": "tchmi:framework#/definitions/Message"
        },
        {
          "properties": {
            "id": {
              "type": "number"
            },
            "timeCleared": {
              "type": "string",
              "format": "datetime"
            },
            "timeConfirmed": {
              "type": "string",
              "format": "datetime"
            },
            "confirmationState": {
              "type": "boolean"
            }
          },
          "required": [
            "id"
          ]
        }
      ]
    },
    "BorderRadius": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "definitions": {
        "value": {
          "type": "number",
          "minimum": 0
        },
        "unit": {
          "type": "string",
          "enum": [
            "px",
            "%"
          ]
        }
      },
      "properties": {
        "topLeft": {
          "$ref": "tchmi:framework#/definitions/BorderRadius/definitions/value"
        },
        "topLeftUnit": {
          "$ref": "tchmi:framework#/definitions/BorderRadius/definitions/unit"
        },
        "topRight": {
          "$ref": "tchmi:framework#/definitions/BorderRadius/definitions/value"
        },
        "topRightUnit": {
          "$ref": "tchmi:framework#/definitions/BorderRadius/definitions/unit"
        },
        "bottomRight": {
          "$ref": "tchmi:framework#/definitions/BorderRadius/definitions/value"
        },
        "bottomRightUnit": {
          "$ref": "tchmi:framework#/definitions/BorderRadius/definitions/unit"
        },
        "bottomLeft": {
          "$ref": "tchmi:framework#/definitions/BorderRadius/definitions/value"
        },
        "bottomLeftUnit": {
          "$ref": "tchmi:framework#/definitions/BorderRadius/definitions/unit"
        }
      },
      "required": [
        "topLeft",
        "topRight",
        "bottomRight",
        "bottomLeft"
      ]
    },
    "BorderStyle": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "definitions": {
        "style": {
          "type": "string",
          "enum": [
            "Solid",
            "Dashed",
            "Dotted",
            "None"
          ]
        }
      },
      "type": "object",
      "properties": {
        "left": {
          "$ref": "tchmi:framework#/definitions/BorderStyle/definitions/style"
        },
        "top": {
          "$ref": "tchmi:framework#/definitions/BorderStyle/definitions/style"
        },
        "right": {
          "$ref": "tchmi:framework#/definitions/BorderStyle/definitions/style"
        },
        "bottom": {
          "$ref": "tchmi:framework#/definitions/BorderStyle/definitions/style"
        }
      },
      "required": [
        "left",
        "top",
        "right",
        "bottom"
      ]
    },
    "BorderWidth": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "definitions": {
        "value": {
          "type": "number",
          "minimum": 0
        },
        "unit": {
          "type": "string",
          "enum": [
            "px",
            "%"
          ]
        }
      },
      "properties": {
        "left": {
          "$ref": "tchmi:framework#/definitions/BorderWidth/definitions/value"
        },
        "leftUnit": {
          "$ref": "tchmi:framework#/definitions/BorderWidth/definitions/unit"
        },
        "top": {
          "$ref": "tchmi:framework#/definitions/BorderWidth/definitions/value"
        },
        "topUnit": {
          "$ref": "tchmi:framework#/definitions/BorderWidth/definitions/unit"
        },
        "right": {
          "$ref": "tchmi:framework#/definitions/BorderWidth/definitions/value"
        },
        "rightUnit": {
          "$ref": "tchmi:framework#/definitions/BorderWidth/definitions/unit"
        },
        "bottom": {
          "$ref": "tchmi:framework#/definitions/BorderWidth/definitions/value"
        },
        "bottomUnit": {
          "$ref": "tchmi:framework#/definitions/BorderWidth/definitions/unit"
        }
      },
      "required": [
        "left",
        "top",
        "right",
        "bottom"
      ]
    },
    "BoxShadowList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "array",
      "items": {
        "title": "BoxShadow definition",
        "type": "object",
        "properties": {
          "color": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          },
          "offsetX": {
            "$ref": "tchmi:framework#/definitions/MeasurementValue"
          },
          "offsetXUnit": {
            "$ref": "tchmi:framework#/definitions/PixelUnit"
          },
          "offsetY": {
            "$ref": "tchmi:framework#/definitions/MeasurementValue"
          },
          "offsetYUnit": {
            "$ref": "tchmi:framework#/definitions/PixelUnit"
          },
          "inset": {
            "type": "boolean"
          },
          "blur": {
            "$ref": "tchmi:framework#/definitions/MeasurementValue"
          },
          "blurUnit": {
            "$ref": "tchmi:framework#/definitions/PixelUnit"
          },
          "spread": {
            "$ref": "tchmi:framework#/definitions/MeasurementValue"
          },
          "spreadUnit": {
            "$ref": "tchmi:framework#/definitions/PixelUnit"
          }
        },
        "required": [
          "color",
          "offsetX",
          "offsetY"
        ]
      },
      "minItems": 0
    },
    "Color": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "anyOf": [
        {
          "$ref": "tchmi:framework#/definitions/SolidColor"
        },
        {
          "$ref": "tchmi:framework#/definitions/LinearGradientColor"
        }
      ]
    },
    "Control": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object"
    },
    "ContentPath": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "minLength": 1
    },
    "ControlAccessRight": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "description": "An access right which is checked by controls. In the Schema a defaultValue of true mean access is granted, false is denied, null is ask parent.",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "description": "Name of the access definition in the HTML."
        },
        "displayName": {
          "type": "string",
          "description": "Name which should be presented the user."
        },
        "visible": {
          "type": "boolean",
          "description": "Determine if an access definition is shown to the user."
        },
        "description": {
          "type": "string",
          "description": "A long description of this access definition."
        },
        "defaultValueInternal": {
          "type": "boolean",
          "description": "Defines the default of this control access right. This will be used if the check for this access right does not return a result."
        }
      },
      "required": [
        "name",
        "displayName",
        "visible",
        "description",
        "defaultValueInternal"
      ]
    },
    "ControlType": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "minLength": 1
    },
    "Empty": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        ""
      ]
    },
    "FontFamily": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string"
    },
    "FontSizeUnit": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        "px",
        "%"
      ]
    },
    "FontStyle": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        "Normal",
        "Italic",
        "Oblique"
      ]
    },
    "FontWeight": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        "Normal",
        "Bold"
      ]
    },
    "Fraction": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "Function": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "definitions": {
        "value": {
          "anyOf": [
            {
              "title": "StaticValue",
              "type": "object",
              "properties": {
                "objectType": {
                  "description": "An enum defining the variable type.",
                  "type": "string",
                  "enum": [
                    "StaticValue"
                  ]
                },
                "value": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "valueType": {
                  "type": "string"
                }
              },
              "required": [
                "objectType",
                "value",
                "valueType"
              ]
            },
            {
              "title": "Symbol",
              "type": "object",
              "properties": {
                "objectType": {
                  "description": "An enum defining the variable type.",
                  "type": "string",
                  "enum": [
                    "Symbol"
                  ]
                },
                "symbolExpression": {
                  "$ref": "tchmi:framework#/definitions/Function/definitions/symbolExpression"
                }
              },
              "required": [
                "objectType",
                "symbolExpression"
              ]
            },
            {
              "title": "ControlApiFunction",
              "type": "object",
              "properties": {
                "objectType": {
                  "description": "An enum defining the variable type.",
                  "type": "string",
                  "enum": [
                    "ControlApiFunction"
                  ]
                },
                "control": {
                  "type": "string"
                },
                "fn": {
                  "type": "string"
                },
                "valueType": {
                  "type": "string"
                }
              },
              "required": [
                "objectType",
                "control",
                "fn",
                "valueType"
              ]
            },
            {
              "title": "EventDataObject",
              "type": "object",
              "properties": {
                "objectType": {
                  "description": "An enum defining the variable type.",
                  "type": "string",
                  "enum": [
                    "EventDataObject"
                  ]
                },
                "propertyPath": {
                  "type": "string"
                }
              },
              "required": [
                "objectType",
                "propertyPath"
              ]
            }
          ]
        },
        "symbolExpression": {
          "title": "SymbolExpression",
          "type": "string",
          "pattern": "^%(s|i|l|pp|tp|f|ctrl|ca)%.+%\\1%$"
        }
      },
      "properties": {
        "objectType": {
          "type": "string",
          "enum": [
            "Function"
          ]
        },
        "fn": {
          "type": "string"
        },
        "fnParams": {
          "type": "array",
          "items": {
            "$ref": "tchmi:framework#/definitions/Function/definitions/value"
          }
        }
      },
      "required": [
        "objectType",
        "fn",
        "fnParams"
      ]
    },
    "FunctionList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "array",
      "items": {
        "$ref": "tchmi:framework#/definitions/Function"
      }
    },
    "HorizontalAlignment": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        "Left",
        "Center",
        "Right"
      ]
    },
    "Id": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "minLength": 1
    },
    "LinearGradientColor": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "properties": {
        "angle": {
          "type": "number"
        },
        "stopPoints": {
          "type": "array",
          "items": {
            "title": "StopPoint definition",
            "$ref": "tchmi:framework#/definitions/StopPoint"
          },
          "minItems": 2
        }
      },
      "required": [
        "angle",
        "stopPoints"
      ]
    },
    "Locale": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string"
    },
    "MeasurementUnit": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        "px",
        "%"
      ]
    },
    "MeasurementValue": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "number"
    },
    "Message": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "tchmi:framework#/definitions/MessageType"
        },
        "text": {
          "type": "string"
        },
        "severity": {
          "$ref": "tchmi:framework#/definitions/MessageSeverity"
        },
        "timeRaised": {
          "type": "string",
          "format": "datetime"
        },
        "description": {
          "type": "string"
        },
        "rawData": {
          "type": "object"
        }
      },
      "required": [
        "type",
        "text",
        "severity",
        "timeRaised",
        "description"
      ]
    },
    "MessageOrAlarm": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "oneOf": [
        {
          "$ref": "tchmi:framework#/definitions/Alarm"
        },
        {
          "$ref": "tchmi:framework#/definitions/Message"
        }
      ]
    },
    "MessageSeverity": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        "Verbose",
        "Info",
        "Warning",
        "Error",
        "Critical"
      ]
    },
    "MessageType": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        "MESSAGE",
        "ALARM"
      ]
    },
    "Padding": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "definitions": {
        "value": {
          "type": "number",
          "minimum": 0
        },
        "unit": {
          "type": "string",
          "enum": [
            "px",
            "%"
          ]
        }
      },
      "properties": {
        "left": {
          "$ref": "tchmi:framework#/definitions/Padding/definitions/value"
        },
        "leftUnit": {
          "$ref": "tchmi:framework#/definitions/Padding/definitions/unit"
        },
        "top": {
          "$ref": "tchmi:framework#/definitions/Padding/definitions/value"
        },
        "topUnit": {
          "$ref": "tchmi:framework#/definitions/Padding/definitions/unit"
        },
        "right": {
          "$ref": "tchmi:framework#/definitions/Padding/definitions/value"
        },
        "rightUnit": {
          "$ref": "tchmi:framework#/definitions/Padding/definitions/unit"
        },
        "bottom": {
          "$ref": "tchmi:framework#/definitions/Padding/definitions/value"
        },
        "bottomUnit": {
          "$ref": "tchmi:framework#/definitions/Padding/definitions/unit"
        }
      },
      "required": [
        "left",
        "top",
        "right",
        "bottom"
      ]
    },
    "Path": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "minLength": 1
    },
    "PixelUnit": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        "px"
      ]
    },
    "PositiveNumber": {
      "allOf": [
        {
          "$ref": "tchmi:general#/definitions/Number"
        },
        {
          "minimum": 0
        }
      ]
    },
    "ScaleMode": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        "None",
        "ScaleToFill",
        "ScaleToFit",
        "ScaleToFitWidth",
        "ScaleToFitHeight"
      ]
    },
    "ScrollMode": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        "No",
        "Yes",
        "Auto"
      ]
    },
    "SizeMode": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        "Value",
        "Parent"
      ]
    },
    "SizeModeWithContent": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        "Value",
        "Parent",
        "Content"
      ]
    },
    "SolidColor": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "properties": {
        "color": {
          "description": "Defining a color as CSS color: #-hexadecimal, rgb(), rgba(), hsl(), hsla(), css color keyword, none or transparent.",
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "color"
      ]
    },
    "StopPoint": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "object",
      "properties": {
        "color": {
          "description": "Defining a color as CSS color: #-hexadecimal, rgb(), rgba(), hsl(), hsla(), lowercase css color keyword or transparent.",
          "type": "string",
          "minLength": 1
        },
        "stop": {
          "type": "string",
          "pattern": "^[0-9]*\\.?[0-9]+(?:px|%)$"
        }
      },
      "required": [
        "color"
      ]
    },
    "ToggleState": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        "Normal",
        "Active"
      ]
    },
    "TransformList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "definitions": {
        "transform": {
          "oneOf": [
            {
              "title": "Translate",
              "type": "object",
              "properties": {
                "transformType": {
                  "type": "string",
                  "enum": [
                    "Translate"
                  ]
                },
                "x": {
                  "$ref": "tchmi:framework#/definitions/MeasurementValue"
                },
                "xUnit": {
                  "$ref": "tchmi:framework#/definitions/MeasurementUnit"
                },
                "y": {
                  "$ref": "tchmi:framework#/definitions/MeasurementValue"
                },
                "yUnit": {
                  "$ref": "tchmi:framework#/definitions/MeasurementUnit"
                },
                "z": {
                  "$ref": "tchmi:framework#/definitions/MeasurementValue"
                },
                "zUnit": {
                  "$ref": "tchmi:framework#/definitions/MeasurementUnit"
                }
              },
              "required": [
                "transformType"
              ]
            },
            {
              "title": "Rotate",
              "type": "object",
              "properties": {
                "transformType": {
                  "type": "string",
                  "enum": [
                    "Rotate"
                  ]
                },
                "angle": {
                  "type": "number"
                },
                "angleUnit": {
                  "$ref": "tchmi:framework#/definitions/TransformList/definitions/angleUnit"
                },
                "vector": {
                  "type": "object",
                  "properties": {
                    "x": {
                      "type": "number"
                    },
                    "y": {
                      "type": "number"
                    },
                    "z": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "x",
                    "y",
                    "z"
                  ]
                }
              },
              "required": [
                "transformType",
                "angle"
              ]
            },
            {
              "title": "Scale",
              "type": "object",
              "properties": {
                "transformType": {
                  "type": "string",
                  "enum": [
                    "Scale"
                  ]
                },
                "x": {
                  "type": "number"
                },
                "y": {
                  "type": "number"
                },
                "z": {
                  "type": "number"
                }
              },
              "required": [
                "transformType"
              ]
            },
            {
              "title": "Skew",
              "type": "object",
              "properties": {
                "transformType": {
                  "type": "string",
                  "enum": [
                    "Skew"
                  ]
                },
                "xAngle": {
                  "type": "number"
                },
                "xAngleUnit": {
                  "$ref": "tchmi:framework#/definitions/TransformList/definitions/angleUnit"
                },
                "yAngle": {
                  "type": "number"
                },
                "yAngleUnit": {
                  "$ref": "tchmi:framework#/definitions/TransformList/definitions/angleUnit"
                }
              },
              "required": [
                "transformType"
              ]
            },
            {
              "title": "Origin",
              "type": "object",
              "properties": {
                "transformType": {
                  "type": "string",
                  "enum": [
                    "Origin"
                  ]
                },
                "x": {
                  "$ref": "tchmi:framework#/definitions/MeasurementValue"
                },
                "xUnit": {
                  "$ref": "tchmi:framework#/definitions/MeasurementUnit"
                },
                "y": {
                  "$ref": "tchmi:framework#/definitions/MeasurementValue"
                },
                "yUnit": {
                  "$ref": "tchmi:framework#/definitions/MeasurementUnit"
                },
                "z": {
                  "$ref": "tchmi:framework#/definitions/MeasurementValue"
                },
                "zUnit": {
                  "$ref": "tchmi:framework#/definitions/MeasurementUnit"
                }
              },
              "required": [
                "transformType"
              ]
            },
            {
              "title": "Perspective",
              "type": "object",
              "properties": {
                "transformType": {
                  "type": "string",
                  "enum": [
                    "Perspective"
                  ]
                },
                "distance": {
                  "type": "number"
                },
                "distanceUnit": {
                  "$ref": "tchmi:framework#/definitions/MeasurementUnit"
                },
                "origin": {
                  "type": "object",
                  "properties": {
                    "x": {
                      "$ref": "tchmi:framework#/definitions/MeasurementValue"
                    },
                    "xUnit": {
                      "$ref": "tchmi:framework#/definitions/MeasurementUnit"
                    },
                    "y": {
                      "$ref": "tchmi:framework#/definitions/MeasurementValue"
                    },
                    "yUnit": {
                      "$ref": "tchmi:framework#/definitions/MeasurementUnit"
                    }
                  }
                }
              },
              "required": [
                "transformType",
                "distance"
              ]
            }
          ]
        },
        "angleUnit": {
          "type": "string",
          "enum": [
            "deg",
            "rad",
            "turn",
            "grad"
          ]
        }
      },
      "type": "array",
      "items": {
        "$ref": "tchmi:framework#/definitions/TransformList/definitions/transform"
      }
    },
    "Trigger": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "definitions": {
        "action": {
          "anyOf": [
            {
              "title": "Condition",
              "type": "object",
              "description": "IF .. THEN ..ELSE - style condition",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "Condition"
                  ]
                },
                "expressions": {
                  "type": "array",
                  "items": {
                    "$ref": "tchmi:framework#/definitions/Trigger/definitions/expression"
                  }
                },
                "true": {
                  "type": "array",
                  "items": {
                    "$ref": "tchmi:framework#/definitions/Trigger/definitions/action"
                  }
                },
                "false": {
                  "type": "array",
                  "items": {
                    "$ref": "tchmi:framework#/definitions/Trigger/definitions/action"
                  }
                }
              },
              "required": [
                "objectType",
                "true",
                "false"
              ]
            },
            {
              "title": "SwitchCase",
              "type": "object",
              "description": "SWITCH .. CASE ..CASE - style condition",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "SwitchCase"
                  ]
                },
                "compare": {
                  "$ref": "tchmi:framework#/definitions/Trigger/definitions/value"
                },
                "cases": {
                  "type": "array",
                  "items": {
                    "$ref": "tchmi:framework#/definitions/Trigger/definitions/vCase"
                  }
                },
                "caseDefault": {
                  "$ref": "tchmi:framework#/definitions/Trigger/definitions/dCase"
                }
              },
              "required": [
                "objectType",
                "compare",
                "cases",
                "caseDefault"
              ]
            },
            {
              "title": "WriteToSymbol",
              "type": "object",
              "description": "Write To Symbol",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "WriteToSymbol"
                  ]
                },
                "symbolExpression": {
                  "$ref": "tchmi:framework#/definitions/Trigger/definitions/symbolExpression"
                },
                "value": {
                  "$ref": "tchmi:framework#/definitions/Trigger/definitions/value"
                }
              },
              "required": [
                "objectType",
                "symbolExpression",
                "value"
              ]
            },
            {
              "title": "Function",
              "type": "object",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "Function"
                  ]
                },
                "fn": {
                  "type": "string"
                },
                "fnParams": {
                  "type": "array",
                  "items": {
                    "$ref": "tchmi:framework#/definitions/Trigger/definitions/value"
                  }
                }
              },
              "required": [
                "objectType",
                "fn",
                "fnParams"
              ]
            },
            {
              "title": "JavaScript",
              "type": "object",
              "description": "Executes a user-defined JavaScript",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "JavaScript"
                  ]
                },
                "sourceLines": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "objectType",
                "sourceLines"
              ]
            },
            {
              "title": "ActionTemplate",
              "type": "object",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "ActionTemplate"
                  ]
                },
                "description": {
                  "type": "string",
                  "description": "A long description of this control."
                },
                "templateName": {
                  "type": "string"
                },
                "fnParams": {
                  "type": "array",
                  "items": {
                    "$ref": "tchmi:framework#/definitions/Trigger/definitions/value"
                  }
                }
              },
              "required": [
                "objectType",
                "templateName",
                "fnParams"
              ]
            },
            {
              "title": "ControlApiFunction",
              "type": "object",
              "description": "",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "ControlApiFunction"
                  ]
                },
                "control": {
                  "type": "string"
                },
                "fn": {
                  "type": "string"
                },
                "fnParams": {
                  "type": "array",
                  "items": {
                    "$ref": "tchmi:framework#/definitions/Trigger/definitions/value"
                  }
                }
              }
            },
            {
              "title": "FunctionExpression",
              "type": "object",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "FunctionExpression"
                  ]
                },
                "functionExpression": {
                  "type": "string"
                }
              },
              "required": [
                "objectType",
                "functionExpression"
              ]
            },
            {
              "title": "CreateBinding",
              "type": "object",
              "description": "",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "CreateBinding"
                  ]
                },
                "sourceExpression": {
                  "$ref": "tchmi:framework#/definitions/Trigger/definitions/symbolExpression"
                },
                "target": {
                  "$ref": "tchmi:framework#/definitions/Trigger/definitions/bindingTarget"
                }
              }
            },
            {
              "title": "RemoveBinding",
              "type": "object",
              "description": "",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "RemoveBinding"
                  ]
                },
                "target": {
                  "$ref": "tchmi:framework#/definitions/Trigger/definitions/bindingTarget"
                }
              }
            },
            {
              "title": "Comment",
              "type": "object",
              "description": "Free comment. Will be ignored on runtime.",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "Comment"
                  ]
                },
                "target": {
                  "$ref": "tchmi:framework#/definitions/Trigger/definitions/comment"
                }
              }
            }
          ]
        },
        "value": {
          "anyOf": [
            {
              "title": "StaticValue",
              "type": "object",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "StaticValue"
                  ]
                },
                "value": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "valueType": {
                  "type": "string"
                }
              },
              "required": [
                "objectType",
                "value",
                "valueType"
              ]
            },
            {
              "title": "Symbol",
              "type": "object",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "Symbol"
                  ]
                },
                "symbolExpression": {
                  "$ref": "tchmi:framework#/definitions/Trigger/definitions/symbolExpression"
                }
              },
              "required": [
                "objectType",
                "symbolExpression"
              ]
            },
            {
              "title": "EventDataObject",
              "type": "object",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "EventDataObject"
                  ]
                },
                "propertyPath": {
                  "type": "string"
                }
              },
              "required": [
                "objectType",
                "propertyPath"
              ]
            },
            {
              "title": "FunctionExpression",
              "type": "object",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "FunctionExpression"
                  ]
                },
                "functionExpression": {
                  "type": "string"
                }
              },
              "required": [
                "objectType",
                "functionExpression"
              ]
            }
          ]
        },
        "comment": {
          "title": "Comment",
          "type": "string"
        },
        "bindingTarget": {
          "anyOf": [
            {
              "title": "ControlAttributeBindingTarget",
              "type": "object",
              "description": "",
              "properties": {
                "objectType": {
                  "type": "string",
                  "enum": [
                    "ControlAttributeBindingTarget"
                  ]
                },
                "attributeExpression": {
                  "$ref": "tchmi:framework#/definitions/Trigger/definitions/controlAttributeSymbolExpression"
                }
              }
            }
          ]
        },
        "expression": {
          "title": "Expression",
          "type": "object",
          "properties": {
            "compare1": {
              "$ref": "tchmi:framework#/definitions/Trigger/definitions/value"
            },
            "compare2": {
              "$ref": "tchmi:framework#/definitions/Trigger/definitions/value"
            },
            "compareOperator": {
              "type": "string",
              "enum": [
                "==",
                "===",
                "!=",
                "!==",
                "<",
                "<=",
                ">",
                ">="
              ]
            },
            "logic": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "AND",
                    "OR"
                  ]
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "required": [
            "compare1",
            "compare2",
            "compareOperator"
          ]
        },
        "vCase": {
          "title": "VCase",
          "type": "object",
          "properties": {
            "actions": {
              "type": "array",
              "items": {
                "$ref": "tchmi:framework#/definitions/Trigger/definitions/action"
              }
            },
            "caseValue": {
              "$ref": "tchmi:framework#/definitions/Trigger/definitions/value"
            }
          },
          "required": [
            "actions",
            "caseValue"
          ]
        },
        "dCase": {
          "title": "DCase",
          "type": "object",
          "properties": {
            "actions": {
              "type": "array",
              "items": {
                "$ref": "tchmi:framework#/definitions/Trigger/definitions/action"
              }
            }
          },
          "required": [
            "actions"
          ]
        },
        "symbolExpression": {
          "title": "SymbolExpression",
          "type": "string",
          "pattern": "^%(s|i|l|pp|tp|f|ctrl)%.+%\\1%$"
        },
        "controlSymbolExpression": {
          "title": "controlSymbolExpression",
          "type": "string",
          "pattern": "^%(ctrl)%.+%\\1%$"
        },
        "controlAttributeSymbolExpression": {
          "title": "ControlAttributeSymbolExpression",
          "type": "string",
          "pattern": "^%(ctrl)%.+%\\1%$"
        }
      },
      "type": "object",
      "properties": {
        "event": {
          "type": "string",
          "minLength": 1
        },
        "preventDefault": {
          "type": "boolean",
          "description": "If activated the default action of the event will not be triggered.\nIf set on touch events the corresponding mouse events will not be triggered."
        },
        "actions": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "tchmi:framework#/definitions/Trigger/definitions/action"
          }
        }
      },
      "required": [
        "event",
        "actions"
      ]
    },
    "TriggerList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "array",
      "items": {
        "$ref": "tchmi:framework#/definitions/Trigger"
      },
      "minItems": 1
    },
    "TypeRef": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string"
    },
    "UserControlPath": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "minLength": 1
    },
    "VerticalAlignment": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        "Top",
        "Center",
        "Bottom"
      ]
    },
    "VirtualControlRightMappingList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "virtualControlRight": {
            "description": "Name of the virtual control right.",
            "type": "string",
            "minLength": 1
          },
          "controlRight": {
            "description": "Real control right.",
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "Visibility": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "type": "string",
      "enum": [
        "Visible",
        "Hidden",
        "Collapsed"
      ]
    },
    "ChartBarGraphColorList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "ChartBarGraphColorList",
      "anyOf": [
        {
          "type": "array",
          "items": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          }
        },
        {
          "$ref": "tchmi:framework#/definitions/SolidColor"
        }
      ]
    },
    "ChartBarGraphDataDefinitionList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "ChartBarGraphDataDefinitionList",
      "anyOf": [
        {
          "type": "array",
          "title": "Array<Array<number>>",
          "items": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        {
          "type": "array",
          "title": "Array<number>",
          "items": {
            "type": "number"
          }
        }
      ]
    },
    "ChartBarGraphPosition": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "ChartBarGraphPosition",
      "type": "string",
      "enum": [
        "Left",
        "Right"
      ]
    },
    "ListItemList": {
      "title": "ListItemList",
      "description": "List Item List",
      "anyOf": [
        {
          "type": "array",
          "items": {
            "$ref": "tchmi:framework#/definitions/ListItem"
          }
        },
        {
          "type": "array"
        },
        {
          "type": "object"
        }
      ]
    },
    "ListItem": {
      "title": "List Item",
      "description": "List Item List",
      "type": "object",
      "properties": {
        "index": {
          "type": "number"
        },
        "text": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "number"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "value": {}
      },
      "required": [
        "text"
      ]
    },
    "DGColumnDefinitionList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "DGColumnDefinitionList",
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "minLength": 1
              },
              "label": {
                "type": "string"
              },
              "control": {
                "type": "string",
                "enum": [
                  "TextBox",
                  "TextBlock",
                  "CheckBox",
                  "Image",
                  "ComboBox"
                ]
              },
              "width": {
                "type": "number",
                "minimum": 0
              },
              "widthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "resize": {
                "type": "boolean"
              },
              "minWidth": {
                "type": "number",
                "minimum": 0
              },
              "minWidthUnit": {
                "$ref": "tchmi:framework#/definitions/MeasurementUnit"
              },
              "cellBackground": {
                "oneOf": [
                  {
                    "$ref": "tchmi:framework#/definitions/SolidColor"
                  },
                  {
                    "$ref": "tchmi:framework#/definitions/LinearGradientColor"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "textColor": {
                "oneOf": [
                  {
                    "$ref": "tchmi:framework#/definitions/SolidColor"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "editable": {
                "type": "boolean"
              },
              "horizontalAlignment": {
                "$ref": "tchmi:framework#/definitions/HorizontalAlignment"
              },
              "verticalAlignment": {
                "$ref": "tchmi:framework#/definitions/VerticalAlignment"
              },
              "dataDefinitions": {
                "$ref": "tchmi:framework#/definitions/DGDataDefinitionList"
              },
              "format": {
                "$ref": "tchmi:framework#/definitions/Function"
              }
            },
            "required": [
              "name",
              "label",
              "control",
              "width",
              "widthUnit",
              "resize",
              "minWidth",
              "minWidthUnit",
              "editable",
              "horizontalAlignment",
              "verticalAlignment"
            ]
          }
        },
        {
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "control": {
              "type": "string",
              "enum": [
                "TextBox",
                "TextBlock",
                "CheckBox",
                "Image",
                "ComboBox"
              ]
            },
            "width": {
              "type": "number",
              "minimum": 0
            },
            "widthUnit": {
              "$ref": "tchmi:framework#/definitions/MeasurementUnit"
            },
            "resize": {
              "type": "boolean"
            },
            "minWidth": {
              "type": "number",
              "minimum": 0
            },
            "minWidthUnit": {
              "$ref": "tchmi:framework#/definitions/MeasurementUnit"
            },
            "cellBackground": {
              "oneOf": [
                {
                  "$ref": "tchmi:framework#/definitions/SolidColor"
                },
                {
                  "$ref": "tchmi:framework#/definitions/LinearGradientColor"
                },
                {
                  "type": "null"
                }
              ]
            },
            "textColor": {
              "oneOf": [
                {
                  "$ref": "tchmi:framework#/definitions/SolidColor"
                },
                {
                  "type": "null"
                }
              ]
            },
            "editable": {
              "type": "boolean"
            },
            "horizontalAlignment": {
              "$ref": "tchmi:framework#/definitions/HorizontalAlignment"
            },
            "verticalAlignment": {
              "$ref": "tchmi:framework#/definitions/VerticalAlignment"
            },
            "format": {
              "$ref": "tchmi:framework#/definitions/Function"
            }
          },
          "required": [
            "label",
            "control",
            "width",
            "widthUnit",
            "resize",
            "minWidth",
            "minWidthUnit",
            "editable",
            "horizontalAlignment",
            "verticalAlignment"
          ]
        }
      ]
    },
    "DGDataDefinitionList": {
      "oneOf": [
        {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "text": {
                "type": "string"
              },
              "value": {
                "type": "number"
              },
              "source": {
                "type": "string"
              },
              "width": {
                "type": "number",
                "minimum": 0
              },
              "height": {
                "type": "number",
                "minimum": 0
              }
            },
            "required": [
              "text",
              "value",
              "source",
              "width",
              "height"
            ]
          }
        },
        {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "text": {
                "type": "string"
              },
              "value": {
                "type": "number"
              }
            },
            "required": [
              "text",
              "value"
            ],
            "additionalProperties": false
          }
        }
      ]
    },
    "ExistingLayoutPath": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "ExistingLayoutPath",
      "description": "Enum of existing Layouts",
      "type": "string",
      "enum": [
        "EN-US_QWERTY_standard",
        "EN-US_QWERTY_full",
        "EN-US_QWERTY_compact",
        "DE-DE_QWERTZ_standard",
        "DE-DE_QWERTZ_full",
        "DE-DE_QWERTZ_compact",
        "PINpad",
        "Numpad",
        "Calculator"
      ]
    },
    "GaugeRangeDefinitionList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "GaugeRangeDefinitionList",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "color": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          },
          "start": {
            "type": "number"
          },
          "end": {
            "type": "number"
          }
        },
        "required": [
          "color",
          "start",
          "end"
        ]
      }
    },
    "GaugeTickDefinition": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "GaugeTickDefinition",
      "type": "object",
      "properties": {
        "mainTickRange": {
          "type": "number",
          "minimum": 0
        },
        "subTickRange": {
          "type": "number",
          "minimum": 0
        }
      },
      "required": [
        "mainTickRange",
        "subTickRange"
      ]
    },
    "LinearGaugeLabelPosition": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "LinearGaugeLabelPosition",
      "type": "string",
      "enum": [
        "Top",
        "Bottom",
        "Left",
        "Right"
      ]
    },
    "LinearGaugeOrientation": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "LinearGaugeOrientation",
      "type": "string",
      "enum": [
        "Horizontal",
        "Vertical"
      ]
    },
    "LinearGaugeUnitOrientation": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "LinearGaugeUnitOrientation",
      "type": "string",
      "enum": [
        "Theme",
        "Horizontal",
        "Vertical"
      ]
    },
    "ChartYAxisDefinitionList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "ChartYAxisDefinitionList",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "position": {
            "type": "string",
            "enum": [
              "Left",
              "Right"
            ]
          },
          "mainTickMinValue": {
            "type": "number"
          },
          "mainTickMaxValue": {
            "type": "number"
          },
          "showLabels": {
            "type": "boolean"
          },
          "labelFontColor": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          },
          "axisColor": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          },
          "showAxisName": {
            "type": "boolean"
          },
          "axisName": {
            "type": "string"
          },
          "axisNameFontFamily": {
            "type": "string"
          },
          "axisNameFontSize": {
            "$ref": "tchmi:framework#/definitions/MeasurementValue"
          },
          "axisNameFontSizeUnit": {
            "$ref": "tchmi:framework#/definitions/FontSizeUnit"
          },
          "axisNameFontWeight": {
            "$ref": "tchmi:framework#/definitions/FontWeight"
          },
          "axisNameFontColor": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          },
          "decimalPlaces": {
            "type": "number",
            "minimum": 0
          },
          "unit": {
            "type": "string"
          },
          "autoScaling": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "position"
        ]
      }
    },
    "ChartLineGraphDescriptionDefinitionList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "ChartLineGraphDescriptionDefinitionList",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "yAxisId": {
            "type": "number"
          },
          "lineWidth": {
            "type": "number"
          },
          "lineColor": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          },
          "pointDot": {
            "type": "boolean"
          },
          "pointDotRadius": {
            "type": "number",
            "minimum": 0
          },
          "pointDotFillColor": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          },
          "pointDotStrokeWidth": {
            "type": "number",
            "minimum": 0
          },
          "pointDotStrokeColor": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          }
        },
        "required": [
          "yAxisId"
        ]
      }
    },
    "ChartLineGraphDataDefinitionList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "ChartLineGraphDataDefinitionList",
      "type": "array",
      "items": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            }
          },
          "required": [
            "x",
            "y"
          ]
        }
      }
    },
    "FillMode": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "FillMode",
      "type": "string",
      "enum": [
        "NonZero",
        "EvenOdd"
      ]
    },
    "RadialGaugeLabelPosition": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "RadialGaugeLabelPosition",
      "type": "string",
      "enum": [
        "Outside",
        "Inside"
      ]
    },
    "VideoSourceList": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "VideoSourceList",
      "description": "Video Source List",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "source": {
            "$ref": "tchmi:framework#/definitions/Path"
          },
          "type": {
            "type": "string",
            "category": "Common",
            "enum": [
              "",
              "video/mp4",
              "video/webm",
              "video/ogg",
              "application/dash+xml",
              "application/vnd.apple.mpegurl"
            ]
          }
        },
        "required": [
          "source",
          "type"
        ]
      }
    },
    "ColumnOptions": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "ColumnOptions",
      "type": "array",
      "items": {
        "type": "object",
        "title": "Column definition",
        "description": "Defines one column.",
        "propertiesMeta": [
          {
            "name": "width",
            "category": "Layout",
            "displayName": "Column Width",
            "displayPriority": 10,
            "description": "Defines width of the column in the grid. Can be a pixel value (42px), percent value (42%), a grow factor (1) or 'auto' (equivalent to grow factor 1).\nThe grow factor determines how much the items will grow relative to the rest of the items when positive free space is distributed.",
            "defaultValue": null,
            "defaultValueInternal": 1
          },
          {
            "name": "widthUnit",
            "category": "Layout",
            "displayName": "Column Width Unit",
            "displayPriority": 10,
            "description": "Defines if the number defines a pixel value (px), percent value (42%) or grow factor (2).",
            "defaultValue": null,
            "defaultValueInternal": "factor"
          },
          {
            "name": "widthMode",
            "category": "Layout",
            "displayName": "Width Mode",
            "displayPriority": 30,
            "description": "Defines if the width is taken from the width value or calculated from child controls in this Column.",
            "defaultValue": null,
            "defaultValueInternal": "Value"
          },
          {
            "name": "maxWidth",
            "category": "Layout",
            "displayName": "Column Max Width",
            "displayPriority": 60,
            "description": "Defines maximal width of the column in the grid. Can be a pixel value (42px), percent value (42%).\nmax-width overrides width, but min-width overrides max-width."
          },
          {
            "name": "maxWidthUnit",
            "category": "Layout",
            "displayName": "Column Max Width Unit",
            "displayPriority": 60,
            "description": ""
          },
          {
            "name": "minWidth",
            "category": "Layout",
            "displayName": "Column Min Width",
            "displayPriority": 61,
            "description": "Defines minimal width of the column in the grid. Can be a pixel value (42px), percent value (42%).\nmax-width overrides width, but min-width overrides max-width."
          },
          {
            "name": "minWidthUnit",
            "category": "Layout",
            "displayName": "Column Min Width Unit",
            "displayPriority": 61,
            "description": ""
          },
          {
            "name": "overflow",
            "category": "Layout",
            "displayName": "Overflow",
            "displayPriority": 65,
            "description": "Defines if a control should be fully visible if it is outside of this column.",
            "defaultValue": null,
            "defaultValueInternal": false
          }
        ],
        "properties": {
          "width": {
            "$ref": "tchmi:framework#/definitions/MeasurementValue"
          },
          "widthUnit": {
            "$ref": "tchmi:framework#/definitions/MeasurementUnitOrFactor"
          },
          "widthMode": {
            "type": "string",
            "enum": [
              "Value",
              "Content"
            ]
          },
          "maxWidth": {
            "$ref": "tchmi:framework#/definitions/MeasurementValue"
          },
          "maxWidthUnit": {
            "$ref": "tchmi:framework#/definitions/MeasurementUnit"
          },
          "minWidth": {
            "$ref": "tchmi:framework#/definitions/MeasurementValue"
          },
          "minWidthUnit": {
            "$ref": "tchmi:framework#/definitions/MeasurementUnit"
          },
          "overflow": {
            "$ref": "tchmi:general#/definitions/Boolean"
          }
        }
      }
    },
    "RowOptions": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "RowOptions",
      "type": "array",
      "items": {
        "type": "object",
        "title": "Row definition",
        "description": "Defines one row.",
        "propertiesMeta": [
          {
            "name": "height",
            "category": "Layout",
            "displayName": "Row Height",
            "displayPriority": 10,
            "description": "Defines height of the cells of this row in the grid. Can be a pixel value (42px), percent value (42%), a grow factor (1) or 'auto' (equivalent to grow factor 1).\nThe grow factor determines how much the items will grow relative to the rest of the items when positive free space is distributed.",
            "defaultValue": null,
            "defaultValueInternal": 1
          },
          {
            "name": "heightUnit",
            "category": "Layout",
            "displayName": "Row Height Unit",
            "displayPriority": 10,
            "description": "Defines if the number defines a pixel value (px), percent value (42%) or grow factor (2).",
            "defaultValue": null,
            "defaultValueInternal": "factor"
          },
          {
            "name": "heightMode",
            "category": "Layout",
            "displayName": "Height Mode",
            "displayPriority": 30,
            "description": "Defines if the height is taken from the height value or calculated from child controls in row.",
            "defaultValue": null,
            "defaultValueInternal": "Value"
          },
          {
            "name": "maxHeight",
            "category": "Layout",
            "displayName": "Row Max Height",
            "displayPriority": 60,
            "description": "Defines maximal height of the row in the grid. Can be a pixel value (42px), percent value (42%).\nmax-height overrides height, but min-height overrides max-height."
          },
          {
            "name": "maxHeightUnit",
            "category": "Layout",
            "displayName": "Row Max Height Unit",
            "displayPriority": 60,
            "description": ""
          },
          {
            "name": "minHeight",
            "category": "Layout",
            "displayName": "Row Min Height",
            "displayPriority": 61,
            "description": "Defines minimal height of the row in the grid. Can be a pixel value (42px), percent value (42%).\nmax-height overrides height, but min-height overrides max-height."
          },
          {
            "name": "minHeightUnit",
            "category": "Layout",
            "displayName": "Row Min Height Unit",
            "displayPriority": 61,
            "description": ""
          },
          {
            "name": "overflow",
            "category": "Layout",
            "displayName": "Overflow",
            "displayPriority": 65,
            "description": "Defines if a control should be fully visible if it is outside of this row.",
            "defaultValue": null,
            "defaultValueInternal": false
          }
        ],
        "properties": {
          "height": {
            "$ref": "tchmi:framework#/definitions/MeasurementValue"
          },
          "heightUnit": {
            "$ref": "tchmi:framework#/definitions/MeasurementUnitOrFactor"
          },
          "heightMode": {
            "type": "string",
            "enum": [
              "Value",
              "Content"
            ]
          },
          "maxHeight": {
            "$ref": "tchmi:framework#/definitions/MeasurementValue"
          },
          "maxHeightUnit": {
            "$ref": "tchmi:framework#/definitions/MeasurementUnit"
          },
          "minHeight": {
            "$ref": "tchmi:framework#/definitions/MeasurementValue"
          },
          "minHeightUnit": {
            "$ref": "tchmi:framework#/definitions/MeasurementUnit"
          },
          "overflow": {
            "$ref": "tchmi:general#/definitions/Boolean"
          }
        }
      }
    },
    "MeasurementUnitOrFactor": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "description": "Defines if the number defines a pixel value (px), percent value (42%) or grow factor (2).\nThe grow factor determines how much the items will grow relative to the rest of the items when positive free space is distributed.",
      "type": "string",
      "enum": [
        "factor",
        "px",
        "%"
      ]
    },
    "CellOptions": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "CellOptions",
      "description": "Definition of cell options in the grid.",
      "type": "array",
      "items": {
        "title": "Cell definition",
        "description": "Definition of a cell.",
        "type": "object",
        "propertiesMeta": [
          {
            "name": "columnIndex",
            "category": "Layout",
            "displayName": "Column Index",
            "displayPriority": 10,
            "description": "Column index of the defined cell."
          },
          {
            "name": "rowIndex",
            "category": "Layout",
            "displayName": "Row Index",
            "displayPriority": 10,
            "description": "Row index of the defined cell."
          },
          {
            "name": "padding",
            "category": "Layout",
            "displayPriority": 60,
            "displayName": "Padding",
            "description": "Inner padding of the cell."
          },
          {
            "name": "backgroundColor",
            "category": "Colors",
            "displayPriority": 10,
            "displayName": "Background Color",
            "description": "Definition of the background color which is used if no or a transparent Background image is set."
          },
          {
            "name": "borderColor",
            "category": "Colors",
            "displayPriority": 10,
            "displayName": "Border Color",
            "description": "Definition of the border color."
          },
          {
            "name": "borderWidth",
            "category": "Border",
            "displayPriority": 10,
            "displayName": "Border Width",
            "description": "Definition of the border width."
          },
          {
            "name": "borderStyle",
            "category": "Border",
            "displayPriority": 10,
            "displayName": "Border Style",
            "description": "Definition of the border style."
          },
          {
            "name": "backgroundImage",
            "category": "Background Image",
            "displayPriority": 10,
            "displayName": "Background Image",
            "description": "Definition of the border style."
          },
          {
            "name": "backgroundImageWidth",
            "category": "Background Image",
            "displayPriority": 20,
            "displayName": "Background Image Width",
            "description": "Width of the background image."
          },
          {
            "name": "backgroundImageWidthUnit",
            "category": "Background Image",
            "displayPriority": 20,
            "displayName": "Background Image Width Unit",
            "description": "Width Unit of the background image.",
            "defaultValue": null,
            "defaultValueInternal": "px"
          },
          {
            "name": "backgroundImageHeight",
            "category": "Background Image",
            "displayPriority": 20,
            "displayName": "Background Image Height",
            "description": "Height of the background image."
          },
          {
            "name": "backgroundImageHeightUnit",
            "category": "Background Image",
            "displayPriority": 20,
            "displayName": "Background Image Height Unit",
            "description": "Height Unit of the background image.",
            "defaultValue": null,
            "defaultValueInternal": "px"
          },
          {
            "name": "backgroundImageHorizontalAlignment",
            "category": "Background Image",
            "displayPriority": 30,
            "displayName": "Background Image Horizontal Aligment",
            "description": "Horizontal Aligment of the background image.",
            "defaultValue": null,
            "defaultValueInternal": "Center"
          },
          {
            "name": "backgroundImageVerticalAlignment",
            "category": "Background Image",
            "displayPriority": 30,
            "displayName": "Background Image Vertical Aligment",
            "description": "Vertical Aligment of the background image.",
            "defaultValue": null,
            "defaultValueInternal": "Center"
          },
          {
            "name": "backgroundImagePadding",
            "category": "Background Image",
            "displayPriority": 60,
            "displayName": "Background Image Padding",
            "description": "Padding of the background image."
          }
        ],
        "properties": {
          "columnIndex": {
            "type": "integer",
            "minimum": 0
          },
          "rowIndex": {
            "type": "integer",
            "minimum": 0
          },
          "padding": {
            "$ref": "tchmi:framework#/definitions/Padding"
          },
          "backgroundColor": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          },
          "borderColor": {
            "$ref": "tchmi:framework#/definitions/SolidColor"
          },
          "borderWidth": {
            "$ref": "tchmi:framework#/definitions/BorderWidth"
          },
          "borderStyle": {
            "$ref": "tchmi:framework#/definitions/BorderStyle"
          },
          "backgroundImage": {
            "$ref": "tchmi:framework#/definitions/Path"
          },
          "backgroundImageWidth": {
            "$ref": "tchmi:framework#/definitions/MeasurementValue"
          },
          "backgroundImageWidthUnit": {
            "$ref": "tchmi:framework#/definitions/MeasurementUnit"
          },
          "backgroundImageHeight": {
            "$ref": "tchmi:framework#/definitions/MeasurementValue"
          },
          "backgroundImageHeightUnit": {
            "$ref": "tchmi:framework#/definitions/MeasurementUnit"
          },
          "backgroundImageHorizontalAlignment": {
            "$ref": "tchmi:framework#/definitions/HorizontalAlignment"
          },
          "backgroundImageVerticalAlignment": {
            "$ref": "tchmi:framework#/definitions/VerticalAlignment"
          },
          "backgroundImagePadding": {
            "$ref": "tchmi:framework#/definitions/Padding"
          }
        }
      }
    },
    "MessageSortAttribute": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "MessageSortAttribute",
      "type": "object",
      "properties": {
        "propertyName": {
          "type": "string",
          "enum": [
            "type",
            "text",
            "severity",
            "timeRaised",
            "description",
            "id",
            "timeCleared",
            "timeConfirmed",
            "confirmationState"
          ]
        },
        "sortOrder": {
          "$ref": "tchmi:framework#/definitions/SortOrder"
        }
      }
    },
    "SortOrder": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "SortOrder",
      "type": "string",
      "enum": [
        "Ascending ",
        "Descending "
      ]
    }
  }
}